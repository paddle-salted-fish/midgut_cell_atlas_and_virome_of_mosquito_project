#! /usr/bin/bash
# author: WSL
# date: 2024.07.02

# const
NumOfThreads=64
SizeOfMemory='230G'

# input
# mosquito.aligned.bam refers to the bam with the unmapped reads generated by CeleScope
FolderName=$1

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/public21/home/sc90258/miniconda3/bin/conda' 'shell.bash' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/public21/home/sc90258/miniconda3/etc/profile.d/conda.sh" ]; then
        . "/public21/home/sc90258/miniconda3/etc/profile.d/conda.sh"
    else
        export PATH="/public21/home/sc90258/miniconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

# change directory to the working directory
conda activate Meta_Samtools
# export reads unaligned to the host genome
samtools view -@ 64 -b -f 4 mosquito.aligned.bam -o mosquito.unaligned.bam && \
echo "mosquito.unaligned.bam successfully generated"

# convert bam to fastq and retain the TAGs of the cell barcodes and UMIs according to 10x Genomics 
samtools fastq -@ 64 -T CB,CR,UB,UR mosquito.unaligned.bam > mosquito.unaligned.fq && \
rm mosquito.unaligned.bam && \
echo "mosquito.unaligned.fq successfully generated"

conda activate Meta_Fastp
# filter out low-quality reads. Fastp arguments:
# -A: --disable_adapter_trimming
# -g: --trim_poly_g
# -x: --trim_poly_x
# -y: --low_complexity_filter
# -w: --thread <= 16
# --dont_eval_duplication: don't evaluate duplication rate to save time and use less memory.
fastp -i mosquito.unaligned.fq -o filtered.mosquito.unaligned.fq -A -x -g -w 16 --dont_eval_duplication && \
mv mosquito.unaligned.fq && \
echo "filtered.fq successfully generated"

# bowtie2 mapping
conda activate Meta_Bowtie2
# bowtie2 mapping to the mosquito_virome_without_coronaviruses database
# convert to sorted bam with retained TAGs
bowtie2 -x ${HOME}/common/databases/bowtie2/mosquito_virome \
		-U filtered.mosquito.unaligned.fq \
		--sam-append-comment \
		--no-unal \
 		-p 64 \
		-S bowtie2.filtered.mosquito_virome.sam && \
./header_fix.py bowtie2.filtered.mosquito_virome.sam && \
echo "reads that mapped to the viral genomes"

conda activate Meta_Samtools
# get the aligned reads
samtools view -@ 64 -bS bowtie2.filtered.mosquito_virome.sam > bowtie2.filtered.mosquito_virome.bam && \
samtools sort -@ 64 bowtie2.filtered.mosquito_virome.bam > bowtie2.filtered.mosquito_virome.sorted.bam && \
rm bowtie2.filtered.mosquito_virome.bam
# rm bowtie2.filtered.mosquito_virome.sam bowtie2.filtered.mosquito_virome.bam

# filter MapQ>=20 reads
samtools view -@ 64 -q 20 -b bowtie2.filtered.mosquito_virome.sorted.bam > bowtie2.filtered.mosquito_virome.q20.bam
samtools fastq -@ 64 -T CB,CR,UB,UR bowtie2.filtered.mosquito_virome.q20.bam > bowtie2.filtered.mosquito_virome.q20.fq
samtools view bowtie2.filtered.mosquito_virome.q20.bam | cut -f 1,3 > bowtie2.blastn
./abundance.py bowtie2
mv bowtie2.species.sorted.abundance ${FolderName}.abundance
samtools view bowtie2.filtered.mosquito_virome.q20.bam > exp_${FolderName}.sam
conda activate Meta_Samtools
samtools view -H bowtie2.filtered.mosquito_virome.sorted.bam > header

